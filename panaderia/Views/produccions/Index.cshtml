@model IEnumerable<panaderia.Models.produccion>

@{
    ViewBag.Title = "Index";
}

<h2>Produccion</h2>

<p>
    <button type="button" id="crear" class="btn">@Html.ActionLink("Nuevo", "Create")</button>
    <button type="button" id="listar"  class="btn">@Html.ActionLink("Mostrar Todo", "Listar")</button>
</p>
<table class="table" , id="tablaProduccion">
    <tr>
        <th>
            @Html.DisplayName("Codigo Produccion")
        </th>
        <th>
            @Html.DisplayName("Fecha Produccion")
        </th>

        <th>
            @Html.DisplayName("Receta")
        </th>
        <th>
            @Html.DisplayName("Cantidad")
        </th>
        <th>
            @Html.DisplayName("Costo Receta Kilo")
        </th>
        <th>
            @Html.DisplayName("Costo Produccion")
        </th>
        <th>
            @Html.DisplayName("Valor Venta Kilo")
        </th>
        <th>
            @Html.DisplayName("Valor venta Total")
        </th>
        <th>
            @Html.DisplayName("Rentabilidad ")
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td class="colum1" id="cidproduccion">

            @Html.DisplayFor(modelItem => item.Id, new { htmlAttributes = new { @id = "produccionId" } })
        </td>
        <td class="colum2" id="cfechaproduccion">
            @Html.DisplayFor(modelItem => item.fecha_produccion, new { htmlAttributes = new { @id = "produccionFecha" } })
        </td>
        <td  class="colum3" id="creceta">
            @Html.DisplayFor(modelItem => item.receta.nombre, new { htmlAttributes = new { @id = "recetaProduccion" } })
        </td>
        <td class="colum4" id="ccantidad">
            @Html.DisplayFor(modelItem => item.cantidad, new { htmlAttributes = new { @id = "cantidad" } })
        </td>
        <td class="colum5" id="ccostoreceta">
            @Html.DisplayFor(modelItem => item.costo_receta_kilo, new { htmlAttributes = new { @id = "costoKilo" } })
        </td>
        <td class="colum6" id="ccostoproduccion">
            @Html.DisplayFor(modelItem => item.costo_produccion, new { htmlAttributes = new { @id = "costoProduccion" } })
        </td>
        <td class="colum7" id="cventakilo">
            @Html.DisplayFor(modelItem => item.valor_venta_kilo, new { htmlAttributes = new { @id = "ventaKilo" } })
        </td>
        <td class="colum8" id="cventatotal">
            @Html.DisplayFor(modelItem => item.valor_total_venta, new { htmlAttributes = new { @id = "ventaTotal" } })
        </td>
        <td class="colum9" id="crentabilidad">
            @Html.DisplayFor(modelItem => item.rentabilidad_produccion, new { htmlAttributes = new { @id = "rentabilidad" } })
        </td>



        <td>
            @Html.ActionLink("Editar", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Detalle", "Details", new { id = item.Id }) |
            @Html.ActionLink("Eliminar", "Delete", new { id = item.Id })
        </td>
    </tr>
}

</table>
<script>
    function valida(e) {
        tecla = (document.all) ? e.keyCode : e.which;

        //Tecla de retroceso para borrar, siempre la permite
        if (tecla == 8) {
            return true;
        }

        // Patron de entrada, en este caso solo acepta numeros
        patron = /[0-9]/;
        tecla_final = String.fromCharCode(tecla);
        return patron.test(tecla_final);
    }
</script>